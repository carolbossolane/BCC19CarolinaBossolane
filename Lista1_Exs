{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNG8Bn0tPYXI6GwKU/wosRe",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/carolbossolane/BCC19CarolinaBossolane/blob/main/Lista1_Exs\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MRAOPmMQiiPr",
        "outputId": "a017a396-46a1-47e8-d3d3-82ee9e397dcc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Questão 1\n",
            "f1(-2) = -0.27612047\n",
            "f1(0)  = 0.12387953\n",
            "Existe raiz em (-2, 0)? True\n",
            "f1(1) = 0.10710678\n",
            "f1(3) = -0.20000000\n",
            "Existe raiz em (1, 3)? True\n",
            "Método da bissecção\n",
            "Considerando o intervalo [-2, 0] e utilizando o método da bissecção: x ≈ -1.0\n",
            "Considerando o intervalo [1, 3] e utilizando o método da bissecção: x ≈ 1.891427755355835\n",
            "Método de Newton-Raphson\n",
            "Com x0 = -2, obtemos o valor da raiz ≈ -1.0\n",
            "Com x0 = 1, obtemos o valor da raiz ≈ 1.8914277842320795\n",
            "\n",
            "Questão 2\n",
            "Considerando o intervalo [0, 1] e utilizando o método da bissecção: x ≈ 0.58578644\n",
            "Considerando o intervalo [1, 3.2] e utilizando o método da bissecção: x ≈ 2.99999999\n",
            "Considerando o intervalo [3.2, 4] e utilizando o método da bissecção: x ≈ 3.41421356\n",
            "Considerando x0=0 e utilizando o método de Newton-Raphson: x ≈ 0.58578644\n",
            "Considerando x0=1 e utilizando o método de Newton-Raphson: x ≈ 3.00000000\n",
            "Considerando x0=3.2 e utilizando o método de Newton-Raphson: x ≈ 3.41421356\n",
            "Tentando outros palpites de chute inicial para o método de Newton-Raphson\n",
            "Considerando x0=1 e utilizando o método de Newton-Raphson: x ≈ 0.58578644\n",
            "Considerando x0=3 e utilizando o método de Newton-Raphson: x ≈ 3.00000000\n",
            "Considerando x0=4 e utilizando o método de Newton-Raphson: x ≈ 3.41421356\n",
            "\n",
            "Questão 7\n",
            "Sequência de aproximações:\n",
            "Iteração 1: c = 2.00000000, f(c) = -8.61094390\n",
            "Iteração 2: c = 3.50000000, f(c) = -15.88454804\n",
            "Iteração 3: c = 4.25000000, f(c) = -2.14458765\n",
            "Iteração 4: c = 4.62500000, f(c) = 16.44027308\n",
            "Iteração 5: c = 4.43750000, f(c) = 5.79764402\n",
            "Iteração 6: c = 4.34375000, f(c) = 1.52307639\n",
            "Iteração 7: c = 4.29687500, f(c) = -0.38269773\n",
            "Iteração 8: c = 4.32031250, f(c) = 0.55172802\n",
            "Iteração 9: c = 4.30859375, f(c) = 0.07996016\n",
            "Iteração 10: c = 4.30273438, f(c) = -0.15250006\n",
            "Considerando o intervalo [-1, 5] e utilizando o método da bissecção: x ≈ 4.30566406\n",
            "Considerando x0=4.43750000 (valor obtido na quinta iteração) e utilizando o método de Newton-Raphson: x ≈ 4.30658473\n",
            "\n",
            "Questão 8\n",
            "Considerando x0=3 e utilizando o método de Newton-Raphson: x ≈ 3.14159265\n",
            "Considerando x0=3 e utilizando o método de Newton-Raphson: x ≈ 3.14159264\n",
            "Considerando o valor de pi com 8 casas decimais, a função de sen(x) apresentar uma melhor precisão na aproximação.\n",
            "\n",
            "Questão 9\n",
            "Considerando x0=0.9, obtemos a seguinte sequência pelo método de Newton-Raphson:\n",
            "Iteração 1: x = -6.87543572, f(x) = -6656.82694440 (df(x) = 0.04065697)\n",
            "Iteração 2: x = -6.00240629, f(x) = -2427.42726536 (df(x) = 7624.97429143)\n",
            "Iteração 3: x = -5.14519676, f(x) = -882.99254448 (df(x) = 2831.77820714)\n",
            "Iteração 4: x = -4.30787827, f(x) = -320.05067450 (df(x) = 1054.54800375)\n",
            "Iteração 5: x = -3.49615119, f(x) = -115.38166826 (df(x) = 394.28360100)\n",
            "Iteração 6: x = -2.71822797, f(x) = -41.24030793 (df(x) = 148.32012308)\n",
            "Iteração 7: x = -1.98628966, f(x) = -14.52674189 (df(x) = 56.34396691)\n",
            "Iteração 8: x = -1.31886592, f(x) = -4.98126204 (df(x) = 21.76539575)\n",
            "Iteração 9: x = -0.74436918, f(x) = -1.61676837 (df(x) = 8.67065340)\n",
            "Iteração 10: x = -0.30408410, f(x) = -0.46193750 (df(x) = 3.67209437)\n",
            "Iteração 11: x = -0.04273827, f(x) = -0.09439149 (df(x) = 1.76753348)\n",
            "Iteração 12: x = 0.04399716, f(x) = -0.00768369 (df(x) = 1.08826913)\n",
            "Iteração 13: x = 0.05239598, f(x) = -0.00006574 (df(x) = 0.91485330)\n",
            "Considerando x0=0.7, obtemos a seguinte sequência pelo método de Newton-Raphson:\n",
            "Iteração 1: x = -1.29913719, f(x) = -4.81259564 (df(x) = 0.14897559)\n",
            "Iteração 2: x = -0.72817628, f(x) = -1.55805837 (df(x) = 8.42894069)\n",
            "Iteração 3: x = -0.29291228, f(x) = -0.44238479 (df(x) = 3.57957099)\n",
            "Iteração 4: x = -0.03762985, f(x) = -0.08885990 (df(x) = 1.73292294)\n",
            "Iteração 5: x = 0.04484489, f(x) = -0.00690882 (df(x) = 1.07741965)\n",
            "Iteração 6: x = 0.05240983, f(x) = -0.00005329 (df(x) = 0.91326753)\n",
            "Iteração 7: x = 0.05246909, f(x) = -0.00000000 (df(x) = 0.89920610)\n",
            "Iteração 8: x = 0.05246910, f(x) = -0.00000000 (df(x) = 0.89909658)\n",
            "Considerando x0=1, obtemos a seguinte sequência pelo método de Newton-Raphson:\n",
            "Iteração 1: x = nan, f(x) = nan (df(x) = 0.00000000)\n",
            "Derivada próxima de zero. Método pode divergir.\n",
            "Considerando x0=2, obtemos a seguinte sequência pelo método de Newton-Raphson:\n",
            "Iteração 1: x = 3.63212056, f(x) = 0.04631890 (df(x) = -0.13533528)\n",
            "Iteração 2: x = 4.29718287, f(x) = 0.00868400 (df(x) = -0.06964595)\n",
            "Iteração 3: x = 4.49074464, f(x) = 0.00056447 (df(x) = -0.04486423)\n",
            "Iteração 4: x = 4.50516674, f(x) = 0.00000290 (df(x) = -0.03913925)\n",
            "Iteração 5: x = 4.50524149, f(x) = 0.00000000 (df(x) = -0.03873822)\n",
            "Iteração 6: x = 4.50524150, f(x) = 0.00000000 (df(x) = -0.03873615)\n",
            "A sequência encontrada é a mesma da apresentada no enunciado para x0=0.9. O método diverge para x0=1 e converge para x0=0.7 e x0=2.\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "from sympy import symbols, cos, pi, diff, lambdify, exp, sin\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "variavel = symbols('x')\n",
        "\n",
        "# Questão 1 a - função e derivada\n",
        "funcao1 = cos(pi * (variavel + 1) / 8) + 0.2 * variavel - 0.8\n",
        "dfuncao1 = diff(funcao1, variavel)\n",
        "\n",
        "# Questão 1 b - função e derivada\n",
        "funcao2 = variavel**3 - 7*variavel**2 + 14*variavel - 6\n",
        "dfuncao2 = diff(funcao2, variavel)\n",
        "\n",
        "# Questão 7 - função e derivada\n",
        "funcao3 = exp(variavel) - 4*variavel**2\n",
        "dfuncao3 = diff(funcao3, variavel)\n",
        "\n",
        "# Questão 8 - função e derivada\n",
        "funcao4 = sin(variavel)\n",
        "dfuncao4 = diff(funcao4, variavel)\n",
        "funcao5 = cos(variavel)+1\n",
        "dfuncao5 = diff(funcao5, variavel)\n",
        "\n",
        "# Questão 9 - função e derivada\n",
        "funcao6 = variavel*exp(-variavel)-np.exp(-3)\n",
        "dfuncao6 = diff(funcao6, variavel)\n",
        "\n",
        "# Converter para funções numéricas\n",
        "f1 = lambdify(variavel, funcao1, 'numpy')\n",
        "df1 = lambdify(variavel, dfuncao1, 'numpy')\n",
        "f2 = lambdify(variavel, funcao2, 'numpy')\n",
        "df2 = lambdify(variavel, dfuncao2, 'numpy')\n",
        "f3 = lambdify(variavel, funcao3, 'numpy')\n",
        "df3 = lambdify(variavel, dfuncao3, 'numpy')\n",
        "f4 = lambdify(variavel, funcao4, 'numpy')\n",
        "df4 = lambdify(variavel, dfuncao4, 'numpy')\n",
        "f5 = lambdify(variavel, funcao5, 'numpy')\n",
        "df5 = lambdify(variavel, dfuncao5, 'numpy')\n",
        "f6 = lambdify(variavel, funcao6, 'numpy')\n",
        "df6 = lambdify(variavel, dfuncao6, 'numpy')\n",
        "\n",
        "# Método da Bissecção\n",
        "def bisseccao(f, a, b, tol=1e-8, max_iter=100):\n",
        "    if f(a) * f(b) >= 0:\n",
        "        raise ValueError(\"f(a) e f(b) devem ter sinais opostos.\")\n",
        "    for _ in range(max_iter):\n",
        "        c = (a + b) / 2\n",
        "        if abs(f(c)) < tol or (b - a) / 2 < tol:\n",
        "            return c\n",
        "        if f(a) * f(c) < 0:\n",
        "            b = c\n",
        "        else:\n",
        "            a = c\n",
        "    return (a + b) / 2\n",
        "\n",
        "# Método da Bissecção mostrando a sequência de valores obtidos\n",
        "def bisseccao1(f, a, b, tol=1e-8, d=100):\n",
        "    if f(a) * f(b) >= 0:\n",
        "        raise ValueError(\"f(a) e f(b) devem ter sinais opostos.\")\n",
        "    print(\"Sequência de aproximações:\")\n",
        "    for i in range(d):\n",
        "        c = (a + b) / 2\n",
        "        print(f\"Iteração {i+1}: c = {c:.8f}, f(c) = {f(c):.8f}\")\n",
        "        if abs(f(c)) < tol or (b - a) / 2 < tol:\n",
        "            return c\n",
        "        if f(a) * f(c) < 0:\n",
        "            b = c\n",
        "        else:\n",
        "            a = c\n",
        "    return (a + b) / 2\n",
        "\n",
        "# Método de Newton\n",
        "def newton(f, df, x0, tol=1e-8, max_iter=100):\n",
        "    for _ in range(max_iter):\n",
        "        fx = f(x0)\n",
        "        dfx = df(x0)\n",
        "        if abs(dfx) < 1e-14:\n",
        "            raise ZeroDivisionError(\"Derivada próxima de zero.\")\n",
        "        x1 = x0 - fx / dfx\n",
        "        if abs(x1 - x0) < tol:\n",
        "            return x1\n",
        "        x0 = x1\n",
        "    return x0\n",
        "\n",
        "# Método de Newton mostrando a sequência de valores obtidos\n",
        "def newton1(f, df, x0, tol=1e-8, max_iter=100):\n",
        "    for i in range(max_iter):\n",
        "        fx = f(x0)\n",
        "        dfx = df(x0)\n",
        "        x1 = x0 - fx / dfx if abs(dfx) >= tol else float('nan')\n",
        "        print(f\"Iteração {i+1}: x = {x1:.8f}, f(x) = {f(x1):.8f} (df(x) = {dfx:.8f})\")\n",
        "        if abs(dfx) < tol:\n",
        "            print(\"Derivada próxima de zero. Método pode divergir.\")\n",
        "            return x0\n",
        "        if abs(x1 - x0) < tol:\n",
        "            return x1\n",
        "        x0 = x1\n",
        "    return x0\n",
        "# Questão 1\n",
        "print(\"Questão 1\")\n",
        "print(f\"f1(-2) = {f1(-2):.8f}\")\n",
        "print(f\"f1(0)  = {f1(0):.8f}\")\n",
        "print(\"Existe raiz em (-2, 0)?\", f1(-2) * f1(0) < 0)\n",
        "print(f\"f1(1) = {f1(1):.8f}\")\n",
        "print(f\"f1(3) = {f1(3):.8f}\")\n",
        "print(\"Existe raiz em (1, 3)?\", f1(1) * f1(3) < 0)\n",
        "print(\"Método da bissecção\")\n",
        "raiz1 = bisseccao(f1, -2, 0)\n",
        "raiz2 = bisseccao(f1, 1, 3)\n",
        "print(f\"Considerando o intervalo [-2, 0] e utilizando o método da bissecção: x ≈ {raiz1}\")\n",
        "print(f\"Considerando o intervalo [1, 3] e utilizando o método da bissecção: x ≈ {raiz2}\")\n",
        "print(\"Método de Newton-Raphson\")\n",
        "x0_list = [-2, 1]\n",
        "for x0 in x0_list:\n",
        "    raiz = newton(f1, df1, x0)\n",
        "    print(f\"Com x0 = {x0}, obtemos o valor da raiz ≈ {raiz}\")\n",
        "# Questão 2\n",
        "print(\"\\nQuestão 2\")\n",
        "raiz2_1 = bisseccao(f2, 0, 1)\n",
        "raiz2_2 = bisseccao(f2, 1, 3.2)\n",
        "raiz2_3 = bisseccao(f2, 3.2, 4)\n",
        "print(f\"Considerando o intervalo [0, 1] e utilizando o método da bissecção: x ≈ {raiz2_1:.8f}\")\n",
        "print(f\"Considerando o intervalo [1, 3.2] e utilizando o método da bissecção: x ≈ {raiz2_2:.8f}\")\n",
        "print(f\"Considerando o intervalo [3.2, 4] e utilizando o método da bissecção: x ≈ {raiz2_3:.8f}\")\n",
        "raiz2_1n = newton(f2,df2,0.5)\n",
        "raiz2_2n = newton(f2,df2,2.1)\n",
        "raiz2_3n = newton(f2,df2,3.6)\n",
        "print(f\"Considerando x0=0 e utilizando o método de Newton-Raphson: x ≈ {raiz2_1n:.8f}\")\n",
        "print(f\"Considerando x0=1 e utilizando o método de Newton-Raphson: x ≈ {raiz2_2n:.8f}\")\n",
        "print(f\"Considerando x0=3.2 e utilizando o método de Newton-Raphson: x ≈ {raiz2_3n:.8f}\")\n",
        "print(\"Tentando outros palpites de chute inicial para o método de Newton-Raphson\")\n",
        "raiz2_4n = newton(f2,df2,1)\n",
        "raiz2_5n = newton(f2,df2,3)\n",
        "raiz2_6n = newton(f2,df2,4)\n",
        "print(f\"Considerando x0=1 e utilizando o método de Newton-Raphson: x ≈ {raiz2_4n:.8f}\")\n",
        "print(f\"Considerando x0=3 e utilizando o método de Newton-Raphson: x ≈ {raiz2_5n:.8f}\")\n",
        "print(f\"Considerando x0=4 e utilizando o método de Newton-Raphson: x ≈ {raiz2_6n:.8f}\")\n",
        "# Questão 7\n",
        "print(\"\\nQuestão 7\")\n",
        "raiz7_1 = bisseccao1(f3, -1, 5,d=10)\n",
        "print(f\"Considerando o intervalo [-1, 5] e utilizando o método da bissecção: x ≈ {raiz7_1:.8f}\")\n",
        "raiz7_1n = newton(f3,df3,4.43750000)\n",
        "print(f\"Considerando x0=4.43750000 (valor obtido na quinta iteração) e utilizando o método de Newton-Raphson: x ≈ {raiz7_1n:.8f}\")\n",
        "# Questão 8\n",
        "print(\"\\nQuestão 8\")\n",
        "raiz8_1n = newton(f4,df4,3)\n",
        "raiz8_2n = newton(f5,df5,3)\n",
        "print(f\"Considerando x0=3 e utilizando o método de Newton-Raphson: x ≈ {raiz8_1n:.8f}\")\n",
        "print(f\"Considerando x0=3 e utilizando o método de Newton-Raphson: x ≈ {raiz8_2n:.8f}\")\n",
        "print(f\"Considerando o valor de pi com 8 casas decimais, a função de sen(x) apresentar uma melhor precisão na aproximação.\")\n",
        "# Questão 9\n",
        "print(\"\\nQuestão 9\")\n",
        "print(f\"Considerando x0=0.9, obtemos a seguinte sequência pelo método de Newton-Raphson:\")\n",
        "raiz9_1 = newton1(f6, df6,0.9,max_iter=13)\n",
        "print(f\"Considerando x0=0.7, obtemos a seguinte sequência pelo método de Newton-Raphson:\")\n",
        "raiz9_2 = newton1(f6, df6,0.7,max_iter=13)\n",
        "print(f\"Considerando x0=1, obtemos a seguinte sequência pelo método de Newton-Raphson:\")\n",
        "raiz9_3 = newton1(f6, df6,1,max_iter=13)\n",
        "print(f\"Considerando x0=2, obtemos a seguinte sequência pelo método de Newton-Raphson:\")\n",
        "raiz9_4 = newton1(f6, df6,2,max_iter=13)\n",
        "print(f\"A sequência encontrada é a mesma da apresentada no enunciado para x0=0.9. O método diverge para x0=1 e converge para x0=0.7 e x0=2.\")"
      ]
    }
  ]
}